/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a InternalUserRequest.
 */
class InternalUserRequest {
  /**
   * Create a InternalUserRequest.
   * @property {string} [appInvitation] The token of the app invitation which
   * lead to signup
   * @property {string} [testerInvitation] The token of the test invitation
   * which lead to signup
   * @property {string} [organizationInvitation] The token of the organization
   * invitation which lead to signup
   * @property {string} [avatarUrl] The avatar URL of the user
   * @property {string} [displayName] The full name of the user. Might for
   * example be first and last name
   * @property {string} email The email address of the user
   * @property {string} name The unique name that is used to identify the user.
   * @property {string} password The password of the user. Needs to be at least
   * 8 characters long and contain at least one lower- and one uppercase
   * letter.
   * @property {string} [portalSubdomain] The sub-domain of the portal from
   * which this request was made. Will be used to build the invitation link.
   * Possible values include: 'install.'
   */
  constructor() {
  }

  /**
   * Defines the metadata of InternalUserRequest
   *
   * @returns {object} metadata of InternalUserRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InternalUserRequest',
      type: {
        name: 'Composite',
        className: 'InternalUserRequest',
        modelProperties: {
          appInvitation: {
            required: false,
            serializedName: 'app_invitation',
            type: {
              name: 'String'
            }
          },
          testerInvitation: {
            required: false,
            serializedName: 'tester_invitation',
            type: {
              name: 'String'
            }
          },
          organizationInvitation: {
            required: false,
            serializedName: 'organization_invitation',
            type: {
              name: 'String'
            }
          },
          avatarUrl: {
            required: false,
            serializedName: 'avatar_url',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'display_name',
            type: {
              name: 'String'
            }
          },
          email: {
            required: true,
            serializedName: 'email',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          password: {
            required: true,
            serializedName: 'password',
            type: {
              name: 'String'
            }
          },
          portalSubdomain: {
            required: false,
            serializedName: 'portal_subdomain',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = InternalUserRequest;
