/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The branch build configuration for each toolset
 *
 */
class CreateOKResponseToolsets {
  /**
   * Create a CreateOKResponseToolsets.
   * @property {object} [xcode] Build configuration when Xcode is part of the
   * build steps
   * @property {string} [xcode.projectOrWorkspacePath] Xcode project/workspace
   * path
   * @property {string} [xcode.podfilePath] Path to CococaPods file, if present
   * @property {string} [xcode.cartfilePath] Path to Carthage file, if present
   * @property {string} [xcode.provisioningProfileEncoded]
   * @property {string} [xcode.certificateEncoded]
   * @property {string} [xcode.provisioningProfileFileId]
   * @property {string} [xcode.certificateFileId]
   * @property {string} [xcode.provisioningProfileUploadId]
   * @property {array} [xcode.appExtensionProvisioningProfileFiles]
   * @property {string} [xcode.certificateUploadId]
   * @property {string} [xcode.certificatePassword]
   * @property {string} [xcode.scheme]
   * @property {string} [xcode.xcodeVersion] Xcode version used to build.
   * Available versions can be found in "/xcode_versions" API. Default is
   * latest stable version, at the time when the configuration is set.
   * @property {string} [xcode.provisioningProfileFilename]
   * @property {string} [xcode.certificateFilename]
   * @property {string} [xcode.teamId]
   * @property {boolean} [xcode.automaticSigning]
   * @property {string} [xcode.xcodeProjectSha] The selected pbxproject hash to
   * the repositroy
   * @property {string} [xcode.archiveConfiguration] The build configuration of
   * the target to archive
   * @property {string} [xcode.targetToArchive] The target id of the selected
   * scheme to archive
   * @property {boolean} [xcode.forceLegacyBuildSystem] Setting this to true
   * forces the build to use Xcode legacy build system. Otherwise, the setting
   * from workspace settings is used.
   * By default new build system is used if workspace setting is not committed
   * to the repository. Only used for iOS React Native app, with Xcode 10.
   * @property {object} [javascript] Build configuration when React Native, or
   * other JavaScript tech, is part of the build steps
   * @property {string} [javascript.packageJsonPath] Path to package.json file
   * for the main project, e.g. "package.json" or "myapp/package.json"
   * @property {boolean} [javascript.runTests] Whether to run Jest unit tests,
   * via npm test, during the build
   * @property {string} [javascript.reactNativeVersion] Version of React Native
   * from package.json files
   * @property {object} [xamarin] Build configuration for Xamarin projects
   * @property {string} [xamarin.slnPath]
   * @property {boolean} [xamarin.isSimBuild]
   * @property {string} [xamarin.args]
   * @property {string} [xamarin.configuration]
   * @property {string} [xamarin.p12File]
   * @property {string} [xamarin.p12Pwd]
   * @property {string} [xamarin.provProfile]
   * @property {string} [xamarin.monoVersion]
   * @property {string} [xamarin.sdkBundle]
   * @property {string} [xamarin.symlink] Symlink of the SDK Bundle and Mono
   * installation.
   * The build will use the associated Mono bundled with related Xamarin SDK.
   * If both symlink and monoVersion or sdkBundle are passed, the symlink is
   * taking precedence. If non-existing symlink is passed, the current stable
   * Mono version will be configured for building.
   * @property {object} [android] Build configuration for Android projects
   * @property {string} [android.gradleWrapperPath] Path to the Gradle wrapper
   * script
   * @property {string} [android.module] The Gradle module to build
   * @property {string} [android.buildVariant] The Android build variant to
   * build
   * @property {boolean} [android.runTests] Whether to run unit tests during
   * the build (default)
   * @property {boolean} [android.runLint] Whether to run lint checks during
   * the build (default)
   * @property {boolean} [android.isRoot] Whether it is the root module or not
   * @property {boolean} [android.automaticSigning] Whether to apply automatic
   * signing or not
   * @property {string} [android.keystorePassword] The password of the keystore
   * @property {string} [android.keyAlias] The key alias
   * @property {string} [android.keyPassword] The key password
   * @property {string} [android.keystoreFilename] The name of the keystore
   * file
   * @property {string} [android.keystoreEncoded] The keystore encoded value
   */
  constructor() {
  }

  /**
   * Defines the metadata of CreateOKResponseToolsets
   *
   * @returns {object} metadata of CreateOKResponseToolsets
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CreateOKResponse_toolsets',
      type: {
        name: 'Composite',
        className: 'CreateOKResponseToolsets',
        modelProperties: {
          xcode: {
            required: false,
            serializedName: 'xcode',
            type: {
              name: 'Composite',
              className: 'CreateOKResponseToolsetsXcode'
            }
          },
          javascript: {
            required: false,
            serializedName: 'javascript',
            type: {
              name: 'Composite',
              className: 'CreateOKResponseToolsetsJavascript'
            }
          },
          xamarin: {
            required: false,
            serializedName: 'xamarin',
            type: {
              name: 'Composite',
              className: 'CreateOKResponseToolsetsXamarin'
            }
          },
          android: {
            required: false,
            serializedName: 'android',
            type: {
              name: 'Composite',
              className: 'CreateOKResponseToolsetsAndroid'
            }
          }
        }
      }
    };
  }
}

module.exports = CreateOKResponseToolsets;
