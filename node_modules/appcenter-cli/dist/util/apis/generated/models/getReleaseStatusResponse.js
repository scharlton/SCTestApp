/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a GetReleaseStatusResponse.
 */
class GetReleaseStatusResponse {
  /**
   * Create a GetReleaseStatusResponse.
   * @property {uuid} id The ID for the upload.
   * @property {string} uploadStatus The current upload status. Possible values
   * include: 'uploadStarted', 'uploadFinished', 'readyToBePublished',
   * 'malwareDetected', 'error'
   * @property {string} [errorDetails] Details describing what went wrong
   * processing the upload. Will only be set if status = 'error'.
   * @property {number} [releaseDistinctId] The distinct ID of the release.
   * Will only be set when the status = 'readyToBePublished'.
   * @property {object} [releaseUrl] The URL of the release. Will only be set
   * when the status = 'readyToBePublished'.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GetReleaseStatusResponse
   *
   * @returns {object} metadata of GetReleaseStatusResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GetReleaseStatusResponse',
      type: {
        name: 'Composite',
        className: 'GetReleaseStatusResponse',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          uploadStatus: {
            required: true,
            serializedName: 'upload_status',
            type: {
              name: 'String'
            }
          },
          errorDetails: {
            required: false,
            serializedName: 'error_details',
            type: {
              name: 'String'
            }
          },
          releaseDistinctId: {
            required: false,
            serializedName: 'release_distinct_id',
            type: {
              name: 'Number'
            }
          },
          releaseUrl: {
            required: false,
            serializedName: 'release_url',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = GetReleaseStatusResponse;
