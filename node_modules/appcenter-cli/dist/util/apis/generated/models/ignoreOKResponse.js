/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a IgnoreOKResponse.
 */
class IgnoreOKResponse {
  /**
   * Create a IgnoreOKResponse.
   * @property {string} symbolId The unique id for this symbol (uuid)
   * @property {string} type The type of the symbol for the current symbol
   * upload. Possible values include: 'Apple', 'JavaScript', 'Breakpad',
   * 'AndroidProguard', 'UWP'
   * @property {string} appId The application that this symbol belongs to
   * @property {string} platform The platform that this symbol is associated
   * with
   * @property {string} url The path name of the symbol file in blob storage
   * @property {string} origin The origin of the symbol file. Possible values
   * include: 'System', 'User'
   * @property {array} alternateSymbolIds The other symbols in the same file
   * @property {string} status Whether the symbol is ignored. Possible values
   * include: 'available', 'ignored'
   * @property {string} [version] The version number. Optional for Apple.
   * Required for Android.
   * @property {string} [build] The build number. Optional for Apple. Required
   * for Android.
   * @property {string} symbolUploadId The id of the symbol upload this symbol
   * belongs to.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IgnoreOKResponse
   *
   * @returns {object} metadata of IgnoreOKResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IgnoreOKResponse',
      type: {
        name: 'Composite',
        className: 'IgnoreOKResponse',
        modelProperties: {
          symbolId: {
            required: true,
            serializedName: 'symbol_id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          appId: {
            required: true,
            serializedName: 'app_id',
            type: {
              name: 'String'
            }
          },
          platform: {
            required: true,
            serializedName: 'platform',
            type: {
              name: 'String'
            }
          },
          url: {
            required: true,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          origin: {
            required: true,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          alternateSymbolIds: {
            required: true,
            serializedName: 'alternate_symbol_ids',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          status: {
            required: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          build: {
            required: false,
            serializedName: 'build',
            type: {
              name: 'String'
            }
          },
          symbolUploadId: {
            required: true,
            serializedName: 'symbol_upload_id',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = IgnoreOKResponse;
