/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a TestReport.
 */
class TestReport {
  /**
   * Create a TestReport.
   * @property {string} appUploadId
   * @property {string} date
   * @property {string} testType
   * @property {string} platform
   * @property {object} stats
   * @property {number} [stats.os]
   * @property {number} [stats.devices]
   * @property {number} [stats.filesize]
   * @property {number} [stats.totalDeviceMinutes]
   * @property {number} [stats.devicesNotRunned]
   * @property {number} [stats.failed]
   * @property {number} [stats.skipped]
   * @property {number} [stats.passed]
   * @property {number} [stats.total]
   * @property {number} [stats.devicesFinished]
   * @property {number} [stats.devicesFailed]
   * @property {number} [stats.devicesSkipped]
   * @property {number} [stats.stepCount]
   * @property {object} [stats.artifacts]
   * @property {string} id
   * @property {number} schemaVersion
   * @property {number} revision
   * @property {array} features
   * @property {array} finishedDeviceSnapshots
   * @property {array} deviceLogs
   * @property {string} dateFinished
   * @property {string} [errorMessage]
   * @property {array} [snapshotFatalErrors]
   */
  constructor() {
  }

  /**
   * Defines the metadata of TestReport
   *
   * @returns {object} metadata of TestReport
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TestReport',
      type: {
        name: 'Composite',
        className: 'TestReport',
        modelProperties: {
          appUploadId: {
            required: true,
            serializedName: 'app_upload_id',
            type: {
              name: 'String'
            }
          },
          date: {
            required: true,
            serializedName: 'date',
            type: {
              name: 'String'
            }
          },
          testType: {
            required: true,
            serializedName: 'testType',
            type: {
              name: 'String'
            }
          },
          platform: {
            required: true,
            serializedName: 'platform',
            type: {
              name: 'String'
            }
          },
          stats: {
            required: true,
            serializedName: 'stats',
            type: {
              name: 'Composite',
              className: 'TestReportStats'
            }
          },
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          schemaVersion: {
            required: true,
            serializedName: 'schema_version',
            type: {
              name: 'Number'
            }
          },
          revision: {
            required: true,
            serializedName: 'revision',
            type: {
              name: 'Number'
            }
          },
          features: {
            required: true,
            serializedName: 'features',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TestReportFeaturesItemElementType',
                  type: {
                    name: 'Composite',
                    className: 'TestReportFeaturesItem'
                  }
              }
            }
          },
          finishedDeviceSnapshots: {
            required: true,
            serializedName: 'finished_device_snapshots',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          deviceLogs: {
            required: true,
            serializedName: 'device_logs',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TestReportDeviceLogsItemElementType',
                  type: {
                    name: 'Composite',
                    className: 'TestReportDeviceLogsItem'
                  }
              }
            }
          },
          dateFinished: {
            required: true,
            serializedName: 'date_finished',
            type: {
              name: 'String'
            }
          },
          errorMessage: {
            required: false,
            serializedName: 'errorMessage',
            type: {
              name: 'String'
            }
          },
          snapshotFatalErrors: {
            required: false,
            serializedName: 'snapshot_fatal_errors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TestReportSnapshotFatalErrorsItemElementType',
                  type: {
                    name: 'Composite',
                    className: 'TestReportSnapshotFatalErrorsItem'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TestReport;
