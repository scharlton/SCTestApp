/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Response for getting a list of releases in a distribution group
 *
 */
class DistributionGroupRelease {
  /**
   * Create a DistributionGroupRelease.
   * @property {number} id ID identifying this unique release.
   * @property {string} version The release's version.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   * @property {string} [origin] The release's origin. Possible values include:
   * 'hockeyapp', 'appcenter'
   * @property {string} shortVersion The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   * @property {boolean} mandatoryUpdate A boolean which determines whether the
   * release is a mandatory update or not.
   * @property {string} uploadedAt UTC time in ISO 8601 format of the uploaded
   * time.
   * @property {boolean} enabled This value determines the whether a release
   * currently is enabled or disabled.
   * @property {boolean} [isExternalBuild] This value determines if a release
   * is external or not.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DistributionGroupRelease
   *
   * @returns {object} metadata of DistributionGroupRelease
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DistributionGroupRelease',
      type: {
        name: 'Composite',
        className: 'DistributionGroupRelease',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          version: {
            required: true,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          origin: {
            required: false,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          shortVersion: {
            required: true,
            serializedName: 'short_version',
            type: {
              name: 'String'
            }
          },
          mandatoryUpdate: {
            required: true,
            serializedName: 'mandatory_update',
            type: {
              name: 'Boolean'
            }
          },
          uploadedAt: {
            required: true,
            serializedName: 'uploaded_at',
            type: {
              name: 'String'
            }
          },
          enabled: {
            required: true,
            serializedName: 'enabled',
            type: {
              name: 'Boolean'
            }
          },
          isExternalBuild: {
            required: false,
            serializedName: 'is_external_build',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = DistributionGroupRelease;
