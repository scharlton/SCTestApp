/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * SharedConnectionRequest
 *
 */
class SharedConnectionRequest {
  /**
   * Create a SharedConnectionRequest.
   * @property {string} [displayName] display name of shared connection
   * @property {string} [credentialType] credential type of the shared
   * connection. Values can be credentials|certificate. Possible values
   * include: 'credentials', 'certificate'. Default value: 'credentials' .
   * @property {string} serviceType Polymorphic Discriminator
   */
  constructor() {
  }

  /**
   * Defines the metadata of SharedConnectionRequest
   *
   * @returns {object} metadata of SharedConnectionRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SharedConnectionRequest',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'serviceType',
          clientName: 'serviceType'
        },
        uberParent: 'SharedConnectionRequest',
        className: 'SharedConnectionRequest',
        modelProperties: {
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          credentialType: {
            required: false,
            serializedName: 'credentialType',
            defaultValue: 'credentials',
            type: {
              name: 'String'
            }
          },
          serviceType: {
            required: true,
            serializedName: 'serviceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = SharedConnectionRequest;
