/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Details of an uploaded release
 *
 */
class ManagementReleaseDetailsResponse {
  /**
   * Create a ManagementReleaseDetailsResponse.
   * @property {number} [distinctId] ID identifying this unique release.
   * @property {string} [origin] The release's origin. Possible values include:
   * 'hockeyapp', 'appcenter'
   * @property {string} [version] The release's short version.<br>
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   * @property {string} [buildVersion] The release's buildVersion.<br>
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   * @property {string} [sortVersion] The release's sortVersion.
   * @property {string} [createdAt] UTC time the release was created in ISO
   * 8601 format.
   * @property {boolean} [enabled] This value determines the whether a release
   * currently is enabled or disabled.
   * @property {string} [deletedAt] UTC time the release was created in ISO
   * 8601 format.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ManagementReleaseDetailsResponse
   *
   * @returns {object} metadata of ManagementReleaseDetailsResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementReleaseDetailsResponse',
      type: {
        name: 'Composite',
        className: 'ManagementReleaseDetailsResponse',
        modelProperties: {
          distinctId: {
            required: false,
            serializedName: 'distinctId',
            type: {
              name: 'Number'
            }
          },
          origin: {
            required: false,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          buildVersion: {
            required: false,
            serializedName: 'buildVersion',
            type: {
              name: 'String'
            }
          },
          sortVersion: {
            required: false,
            serializedName: 'sortVersion',
            type: {
              name: 'String'
            }
          },
          createdAt: {
            required: false,
            serializedName: 'createdAt',
            type: {
              name: 'String'
            }
          },
          enabled: {
            required: false,
            serializedName: 'enabled',
            type: {
              name: 'Boolean'
            }
          },
          deletedAt: {
            required: false,
            serializedName: 'deletedAt',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementReleaseDetailsResponse;
