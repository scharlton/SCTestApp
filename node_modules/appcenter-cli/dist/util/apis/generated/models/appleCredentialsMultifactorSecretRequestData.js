/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * apple secret details
 *
 */
class AppleCredentialsMultifactorSecretRequestData {
  /**
   * Create a AppleCredentialsMultifactorSecretRequestData.
   * @property {string} username username to connect to apple store.
   * @property {string} password password to connect to apple store.
   * @property {string} authCode The 6 digit Apple OTP for Multifactor accounts
   * @property {string} [appSpecificPassword] The app specific password
   * required for app publishing for 2FA accounts
   */
  constructor() {
  }

  /**
   * Defines the metadata of AppleCredentialsMultifactorSecretRequestData
   *
   * @returns {object} metadata of AppleCredentialsMultifactorSecretRequestData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AppleCredentialsMultifactorSecretRequest_data',
      type: {
        name: 'Composite',
        className: 'AppleCredentialsMultifactorSecretRequestData',
        modelProperties: {
          username: {
            required: true,
            serializedName: 'username',
            type: {
              name: 'String'
            }
          },
          password: {
            required: true,
            serializedName: 'password',
            type: {
              name: 'String'
            }
          },
          authCode: {
            required: true,
            serializedName: 'authCode',
            type: {
              name: 'String'
            }
          },
          appSpecificPassword: {
            required: false,
            serializedName: 'appSpecificPassword',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AppleCredentialsMultifactorSecretRequestData;
