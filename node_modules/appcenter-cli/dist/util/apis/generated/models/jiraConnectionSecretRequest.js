/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Jira connection secrets
 *
 */
class JiraConnectionSecretRequest {
  /**
   * Create a JiraConnectionSecretRequest.
   * @property {string} [displayName] display name of shared connection
   * @property {string} serviceType service type of shared connection can be
   * apple|gitlab|googleplay|jira|applecertificate. Possible values include:
   * 'apple', 'jira', 'googleplay', 'gitlab'
   * @property {string} [credentialType] credential type of the shared
   * connection. Values can be credentials|certificate. Possible values
   * include: 'credentials', 'certificate'. Default value: 'credentials' .
   * @property {object} data jira secret details
   * @property {string} [data.baseUrl] baseUrl to connect to jira instance
   * @property {string} [data.username] username to connect to jira instance
   * @property {string} [data.password] password to connect to jira instance
   */
  constructor() {
  }

  /**
   * Defines the metadata of JiraConnectionSecretRequest
   *
   * @returns {object} metadata of JiraConnectionSecretRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'jira',
      type: {
        name: 'Composite',
        className: 'JiraConnectionSecretRequest',
        modelProperties: {
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          serviceType: {
            required: true,
            serializedName: 'serviceType',
            type: {
              name: 'String'
            }
          },
          credentialType: {
            required: false,
            serializedName: 'credentialType',
            defaultValue: 'credentials',
            type: {
              name: 'String'
            }
          },
          data: {
            required: true,
            serializedName: 'data',
            type: {
              name: 'Composite',
              className: 'JiraConnectionSecretRequestData'
            }
          }
        }
      }
    };
  }
}

module.exports = JiraConnectionSecretRequest;
