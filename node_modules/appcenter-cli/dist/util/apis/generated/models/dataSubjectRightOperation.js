/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a DataSubjectRightOperation.
 */
class DataSubjectRightOperation {
  /**
   * Create a DataSubjectRightOperation.
   * @property {uuid} requestId Unique request identifier
   * @property {uuid} operationId Unique operation identifier
   * @property {string} requestType Request type. Possible values include:
   * 'Unsupported', 'Delete', 'Purge', 'UndoDelete', 'Scheduled', 'AppDelete',
   * 'AppPurge', 'AppUndoDelete', 'Export', 'CustomerAccountDelete',
   * 'CustomerAccountExport', 'CustomerUserDelete', 'CustomerUserExport'
   * @property {string} status Operation status. Possible values include:
   * 'None', 'Created', 'Queued', 'InProgress', 'Completed', 'Failed'
   * @property {string} participant Participant to execute the response
   * @property {string} context JSON object decribing what to delete (TODO -
   * make separate definition?)
   * @property {string} [appId] Application identifier if applicable
   * @property {string} [participantData] String field to be used by
   * participant for any intermediate statuses or data they need to save
   */
  constructor() {
  }

  /**
   * Defines the metadata of DataSubjectRightOperation
   *
   * @returns {object} metadata of DataSubjectRightOperation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DataSubjectRightOperation',
      type: {
        name: 'Composite',
        className: 'DataSubjectRightOperation',
        modelProperties: {
          requestId: {
            required: true,
            serializedName: 'requestId',
            type: {
              name: 'String'
            }
          },
          operationId: {
            required: true,
            serializedName: 'operationId',
            type: {
              name: 'String'
            }
          },
          requestType: {
            required: true,
            serializedName: 'requestType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Unsupported', 'Delete', 'Purge', 'UndoDelete', 'Scheduled', 'AppDelete', 'AppPurge', 'AppUndoDelete', 'Export', 'CustomerAccountDelete', 'CustomerAccountExport', 'CustomerUserDelete', 'CustomerUserExport' ]
            }
          },
          status: {
            required: true,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'None', 'Created', 'Queued', 'InProgress', 'Completed', 'Failed' ]
            }
          },
          participant: {
            required: true,
            serializedName: 'participant',
            type: {
              name: 'String'
            }
          },
          context: {
            required: true,
            serializedName: 'context',
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          participantData: {
            required: false,
            serializedName: 'participantData',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DataSubjectRightOperation;
