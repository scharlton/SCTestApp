/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Alerting bugtracker resource
 *
 */
class AlertingBugtracker {
  /**
   * Create a AlertingBugtracker.
   * @property {string} [type] type of bugtracker. Possible values include:
   * 'github', 'vsts', 'jira'
   * @property {string} [state] bugtracker state. Possible values include:
   * 'enabled', 'disabled', 'unauthorized'
   * @property {string} [tokenId] ID of OAuth token
   * @property {array} [eventTypes] Event types enabled for bugtracker
   * @property {object} [settings] Bugtracker specific settings
   * @property {string} [settings.callbackUrl]
   * @property {string} [settings.ownerName]
   * @property {string} [settings.type] Polymorphic Discriminator
   */
  constructor() {
  }

  /**
   * Defines the metadata of AlertingBugtracker
   *
   * @returns {object} metadata of AlertingBugtracker
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AlertingBugtracker',
      type: {
        name: 'Composite',
        className: 'AlertingBugtracker',
        modelProperties: {
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          tokenId: {
            required: false,
            serializedName: 'token_id',
            type: {
              name: 'String'
            }
          },
          eventTypes: {
            required: false,
            serializedName: 'event_types',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          settings: {
            required: false,
            serializedName: 'settings',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'AlertingBugtrackerSettingsModel',
              className: 'AlertingBugtrackerSettingsModel'
            }
          }
        }
      }
    };
  }
}

module.exports = AlertingBugtracker;
