/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a DataProvisioningParameters.
 */
class DataProvisioningParameters {
  /**
   * Create a DataProvisioningParameters.
   * @property {string} [subscriptionId]
   * @property {string} [databaseConnectionString]
   * @property {string} [resourceRegion] Possible values include: 'East Asia',
   * 'Southeast Asia', 'Australia Central', 'Australia Central 2', 'Australia
   * East', 'Australia Southeast', 'Brazil South', 'Canada Central', 'Canada
   * East', 'Central India', 'South India', 'West India', 'North Europe', 'West
   * Europe', 'France Central', 'France South', 'Germany Central', 'Germany
   * Northeast', 'Japan East', 'Japan West', 'Korea Central', 'Korea South',
   * 'South Africa North', 'South Africa West', 'UK South', 'UK West', 'Central
   * US', 'East US', 'East US 2', 'US Gov Arizona', 'US Gov Texas', 'North
   * Central US', 'South Central US', 'West US', 'West US 2', 'West Central US'
   * @property {string} [database]
   * @property {string} [collection]
   * @property {number} [requestUnits]
   * @property {string} [accountName]
   */
  constructor() {
  }

  /**
   * Defines the metadata of DataProvisioningParameters
   *
   * @returns {object} metadata of DataProvisioningParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DataProvisioningParameters',
      type: {
        name: 'Composite',
        className: 'DataProvisioningParameters',
        modelProperties: {
          subscriptionId: {
            required: false,
            serializedName: 'subscriptionId',
            type: {
              name: 'String'
            }
          },
          databaseConnectionString: {
            required: false,
            serializedName: 'databaseConnectionString',
            type: {
              name: 'String'
            }
          },
          resourceRegion: {
            required: false,
            serializedName: 'resourceRegion',
            type: {
              name: 'String'
            }
          },
          database: {
            required: false,
            serializedName: 'database',
            type: {
              name: 'String'
            }
          },
          collection: {
            required: false,
            serializedName: 'collection',
            type: {
              name: 'String'
            }
          },
          requestUnits: {
            required: false,
            serializedName: 'requestUnits',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 400
            },
            type: {
              name: 'Number'
            }
          },
          accountName: {
            required: false,
            serializedName: 'accountName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DataProvisioningParameters;
