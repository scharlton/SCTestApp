/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a OverviewResponse.
 */
class OverviewResponse {
  /**
   * Create a OverviewResponse.
   * @property {string} [databaseLocation] Possible values include: 'East
   * Asia', 'Southeast Asia', 'Australia Central', 'Australia Central 2',
   * 'Australia East', 'Australia Southeast', 'Brazil South', 'Canada Central',
   * 'Canada East', 'Central India', 'South India', 'West India', 'North
   * Europe', 'West Europe', 'France Central', 'France South', 'Germany
   * Central', 'Germany Northeast', 'Japan East', 'Japan West', 'Korea
   * Central', 'Korea South', 'South Africa North', 'South Africa West', 'UK
   * South', 'UK West', 'Central US', 'East US', 'East US 2', 'US Gov Arizona',
   * 'US Gov Texas', 'North Central US', 'South Central US', 'West US', 'West
   * US 2', 'West Central US'
   * @property {string} [accountName]
   * @property {string} [databaseId]
   * @property {number} [throughput]
   */
  constructor() {
  }

  /**
   * Defines the metadata of OverviewResponse
   *
   * @returns {object} metadata of OverviewResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OverviewResponse',
      type: {
        name: 'Composite',
        className: 'OverviewResponse',
        modelProperties: {
          databaseLocation: {
            required: false,
            serializedName: 'databaseLocation',
            type: {
              name: 'String'
            }
          },
          accountName: {
            required: false,
            serializedName: 'accountName',
            type: {
              name: 'String'
            }
          },
          databaseId: {
            required: false,
            serializedName: 'databaseId',
            type: {
              name: 'String'
            }
          },
          throughput: {
            required: false,
            serializedName: 'throughput',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = OverviewResponse;
