/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information about a specific release.
 *
 */
class LegacyDeploymentHistoryResponseHistoryItem {
  /**
   * Create a LegacyDeploymentHistoryResponseHistoryItem.
   * @property {object} [allOf]
   * @property {string} [allOf.appVersion] The version of the release
   * @property {boolean} [allOf.isDisabled] Flag used to determine if release
   * is disabled
   * @property {boolean} [allOf.isMandatory] Flag used to determine if release
   * is mandatory
   * @property {number} [allOf.rollout] Percentage (out of 100) that release is
   * deployed to
   * @property {string} [allOf.blobUrl] Location (URL) of release package
   * @property {number} [allOf.size] Size of release package
   * @property {string} [allOf.releaseMethod] Method used to deploy release
   * @property {number} [allOf.uploadTime] Release upload time as epoch Unix
   * timestamp
   * @property {string} [allOf.label] Release label (aka release name)
   * @property {string} [allOf.releasedByUserId] User ID that triggered most
   * recent release
   * @property {string} [allOf.manifestBlobUrl] The URL location of the
   * package's manifest file.
   * @property {object} [allOf.diffPackageMap] Object containing URL and size
   * of changed package hashes contained in the release
   * @property {string} [description] The description of the release.
   * @property {string} [originalDeployment] The original deployment of the
   * release, if it's ever been promoted.
   * @property {string} [originalLabel] The original label of the release, if
   * it's ever been updated.
   * @property {string} [packageHash] The package's hash value (internal use).
   */
  constructor() {
  }

  /**
   * Defines the metadata of LegacyDeploymentHistoryResponseHistoryItem
   *
   * @returns {object} metadata of LegacyDeploymentHistoryResponseHistoryItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LegacyDeploymentHistoryResponse_historyItem',
      type: {
        name: 'Composite',
        className: 'LegacyDeploymentHistoryResponseHistoryItem',
        modelProperties: {
          allOf: {
            required: false,
            serializedName: 'allOf',
            type: {
              name: 'Composite',
              className: 'LegacyDeploymentHistoryResponseHistoryItemAllOf'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          originalDeployment: {
            required: false,
            serializedName: 'originalDeployment',
            type: {
              name: 'String'
            }
          },
          originalLabel: {
            required: false,
            serializedName: 'originalLabel',
            type: {
              name: 'String'
            }
          },
          packageHash: {
            required: false,
            serializedName: 'packageHash',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LegacyDeploymentHistoryResponseHistoryItem;
