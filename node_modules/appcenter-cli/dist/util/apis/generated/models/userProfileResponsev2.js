/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a UserProfileResponsev2.
 */
class UserProfileResponsev2 {
  /**
   * Create a UserProfileResponsev2.
   * @property {uuid} id The unique id (UUID) of the user
   * @property {string} [avatarUrl] The avatar URL of the user
   * @property {boolean} [canChangePassword] User is required to send an old
   * password in order to change the password.
   * @property {string} displayName The full name of the user. Might for
   * example be first and last name
   * @property {string} email The email address of the user
   * @property {string} name The unique name that is used to identify the user.
   * @property {string} [createdAt] The created date of the user
   * @property {string} [nextNpsSurveyDate] The date in the future when the
   * user should be checked again for NPS eligibility
   * @property {string} origin The creation origin of this user. Possible
   * values include: 'appcenter', 'hockeyapp', 'codepush'
   * @property {array} [featureFlags] The feature flags that are enabled for
   * this user
   * @property {string} [adminRole] The new admin_role. Possible values
   * include: 'superAdmin', 'admin', 'devOps', 'customerSupport', 'notAdmin'
   * @property {object} [settings] The user's settings
   * @property {string} [sessionHash] The session hash of the user
   */
  constructor() {
  }

  /**
   * Defines the metadata of UserProfileResponsev2
   *
   * @returns {object} metadata of UserProfileResponsev2
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UserProfileResponsev2',
      type: {
        name: 'Composite',
        className: 'UserProfileResponsev2',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          avatarUrl: {
            required: false,
            serializedName: 'avatar_url',
            type: {
              name: 'String'
            }
          },
          canChangePassword: {
            required: false,
            serializedName: 'can_change_password',
            type: {
              name: 'Boolean'
            }
          },
          displayName: {
            required: true,
            serializedName: 'display_name',
            type: {
              name: 'String'
            }
          },
          email: {
            required: true,
            serializedName: 'email',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          createdAt: {
            required: false,
            serializedName: 'created_at',
            type: {
              name: 'String'
            }
          },
          nextNpsSurveyDate: {
            required: false,
            serializedName: 'next_nps_survey_date',
            type: {
              name: 'String'
            }
          },
          origin: {
            required: true,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          featureFlags: {
            required: false,
            serializedName: 'feature_flags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          adminRole: {
            required: false,
            serializedName: 'admin_role',
            type: {
              name: 'String'
            }
          },
          settings: {
            required: false,
            serializedName: 'settings',
            type: {
              name: 'Object'
            }
          },
          sessionHash: {
            required: false,
            serializedName: 'session_hash',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = UserProfileResponsev2;
